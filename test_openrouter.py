#!/usr/bin/env python3
"""
Test script for OpenRouter AI integration
"""

import asyncio
import requests
import json

async def test_openrouter_integration():
    """Test the OpenRouter AI analysis endpoint"""
    
    print("üß™ Testing OpenRouter AI Integration...")
    print("=" * 50)
    
    # Test data - Hebrew survey prompt
    test_prompt = """
    ◊†◊™◊ó ◊ê◊™ ◊î◊™◊©◊ï◊ë◊ï◊™ ◊î◊ë◊ê◊ï◊™ ◊©◊ú ◊û◊©◊™◊û◊© ◊ë◊©◊ê◊ú◊ï◊ü ◊¢◊ú ◊©◊ô◊û◊ï◊© ◊ë-AI ◊ï◊™◊ü ◊î◊û◊ú◊¶◊ï◊™ ◊û◊ï◊™◊ê◊û◊ï◊™ ◊ê◊ô◊©◊ô◊™:
    
    ◊í◊ô◊ú: 25-34
    ◊¢◊ô◊°◊ï◊ß: ◊û◊™◊õ◊†◊™
    ◊î◊í◊ì◊®◊î ◊¢◊¶◊û◊ô◊™: ◊û◊ß◊¶◊ï◊¢◊ü ◊ò◊õ◊†◊ï◊ú◊ï◊í◊ô◊î
    ◊õ◊ú◊ô◊ù ◊û◊ï◊õ◊®◊ô◊ù: ChatGPT, GitHub Copilot
    ◊®◊û◊™ ◊©◊ô◊û◊ï◊©: ◊õ◊ü ‚Äì ◊ï◊ê◊†◊ô ◊û◊©◊™◊û◊© ◊ë◊ê◊ï◊§◊ü ◊ß◊ë◊ï◊¢
    ◊û◊ò◊®◊î ◊¢◊ô◊ß◊®◊ô◊™: ◊©◊ô◊§◊ï◊® ◊î◊§◊®◊ï◊ì◊ï◊ß◊ò◊ô◊ë◊ô◊ï◊™ ◊ë◊¢◊ë◊ï◊ì◊î
    ◊ó◊ú◊ï◊ù ◊ô◊¶◊ô◊®◊î ◊¢◊ù AI: ◊ô◊¶◊ô◊®◊™ ◊õ◊ú◊ô ◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î ◊ú◊§◊ô◊™◊ï◊ó
    
    ◊ë◊î◊™◊ë◊°◊° ◊¢◊ú ◊õ◊ú ◊î◊û◊ô◊ì◊¢ ◊î◊ñ◊î, ◊õ◊™◊ï◊ë ◊†◊ô◊™◊ï◊ó ◊û◊ï◊™◊ê◊ù ◊ê◊ô◊©◊ô◊™ ◊ë◊¢◊ë◊®◊ô◊™.
    """
    
    # API endpoint
    url = "http://localhost:8000/api/ai/analyze"
    
    # Request payload
    payload = {
        "prompt": test_prompt,
        "add_context_from_internet": False
    }
    
    try:
        print("üì° Sending request to OpenRouter...")
        response = requests.post(url, json=payload, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            analysis = result.get("analysis", "")
            
            print("‚úÖ SUCCESS! OpenRouter AI Response:")
            print("-" * 50)
            print(analysis)
            print("-" * 50)
            print(f"üìä Response length: {len(analysis)} characters")
            print("üéØ Hebrew AI analysis generated successfully!")
            
            # Check if it's a real AI response (not fallback)
            if "◊û◊ï◊™◊ê◊ù ◊ê◊ô◊©◊ô◊™" in analysis and len(analysis) > 200:
                print("ü§ñ This appears to be a REAL AI-generated response!")
            else:
                print("‚ö†Ô∏è  This might be the fallback response.")
                
        else:
            print(f"‚ùå Error: HTTP {response.status_code}")
            print(f"Response: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå Connection Error: Is the backend server running?")
        print("üí° Try: cd api && python run.py")
        
    except requests.exceptions.Timeout:
        print("‚è∞ Timeout: OpenRouter API took too long to respond")
        
    except Exception as e:
        print(f"‚ùå Unexpected error: {str(e)}")

if __name__ == "__main__":
    asyncio.run(test_openrouter_integration()) 